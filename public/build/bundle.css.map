{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { fly } from \"svelte/transition\";\n  import MovieItem from \"./Movie/Item.svelte\";\n\n  const APIKEY = `YOUR MOVIEDB API KEY`;\n  const BASEURL = `https://api.themoviedb.org/3`;\n  const APISETTINGS = `?api_key=${APIKEY}&language=en-US`;\n\n  const movies = (async () => {\n    const URL = `${BASEURL}/discover/movie${APISETTINGS}&sort_by=popularity.desc`;\n    const response = await fetch(URL);\n\n    return await response.json();\n  })();\n\n  let likedMovies = [];\n\n  function toggleLike(event) {\n    const movie = event.detail;\n\n    let index = likedMovies.findIndex(m => m.id === movie.id);\n\n    if (index >= 0) {\n      likedMovies.splice(index, 1);\n      return;\n    } else {\n      likedMovies.push(movie);\n    }\n    likedMovies = likedMovies;\n  }\n\n  $: like = id => {\n    let index = likedMovies.findIndex(m => m.id === id);\n\n    return index >= 0;\n  };\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 0;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n\n    .panel {\n      height: 100vh;\n      overflow: auto;\n    }\n  }\n</style>\n\n<svelte:head>\n  <title>Movies Svelte</title>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n    integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n    crossorigin=\"anonymous\" />\n</svelte:head>\n\n<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 col-md-6 col-lg-8 border panel\">\n      <h2>Popular movies</h2>\n      <div class=\"row\">\n        {#await movies}\n          <div class=\"col-12\">\n            <p>Cargando datos ...</p>\n          </div>\n        {:then data}\n          {#each data.results as movie}\n            <div class=\"col-12 col-md-6 col-lg-4 p-2\">\n              <MovieItem\n                like={like(movie.id)}\n                id={movie.id}\n                title={movie.title}\n                overview={movie.overview}\n                cover={movie.poster_path}\n                on:onToggleLike={toggleLike} />\n            </div>\n          {/each}\n        {/await}\n      </div>\n\n    </div>\n    <div class=\"col-12 col-md-6 col-lg-4 border panel\">\n      <h2>My Top Favourite Films</h2>\n      <div class=\"row\">\n        {#if likedMovies.length}\n          {#each likedMovies as movie, i (movie.id)}\n            <div\n              in:fly={{ duration: 300, y: 20 }}\n              out:fly={{ duration: 800, y: -20 }}\n              class=\"col-12 col-md-6 col-lg-4 p-2\">\n              <MovieItem\n                like={like(movie.id)}\n                id={movie.id}\n                title={movie.title}\n                overview=\"\"\n                cover={movie.cover}\n                on:onToggleLike={toggleLike} />\n            </div>\n          {/each}\n        {:else}\n          <div class=\"col-12\">\n            <p>Add films ...</p>\n          </div>\n        {/if}\n      </div>\n    </div>\n  </div>\n</main>\n"
  ],
  "names": [],
  "mappings": "AAuCE,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,IAAI,AAChB,CAAC,AACH,CAAC"
}